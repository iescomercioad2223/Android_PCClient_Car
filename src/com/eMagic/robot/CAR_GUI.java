/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.eMagic.robot;

import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author dapelle
 */
public class CAR_GUI extends javax.swing.JFrame {
    private Cam_Thread_UDP cam_thread;
    private Sensors_Thread_UDP sensors_thread;
    private IOIO_Thread_UDP IOIO_thread;
    
    javax.swing.ImageIcon imagenCam;
    //ByteArrayInputStream bis;
    float x_O,y_O,z_O,x_A,y_A,z_A;
    boolean key_pressed=false, LEFT=false, RIGHT=false, UP=false, DOWN=false, LUZ=false, BOCINA=false, SEGUIR_BUCLE=true;
    boolean UPLEFT=false, UPRIGHT=false, DOWNLEFT=false, DOWNRIGHT=false;
	
    /**
     * Creates new form xCAR_GUI
     */
    public CAR_GUI() {
        initComponents(); 
        imagenCam = new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/camera.png"));
        cam_thread = null;
	sensors_thread = null;                                          
        addLogMessage("Arranque APP del movil...");                
        SEGUIR_BUCLE = true;   
        IOIO_thread = new IOIO_Thread_UDP(this);
    }
    
    public void set_image(byte aux[]) {	      
        jLabelFrameCamera.setIcon(new javax.swing.ImageIcon(aux));         
    }
    public void setIOIOIPPortClient(String ServerIP, String ServerPort, String ClientIP, String ClientPort) {
        jLabelServerIP.setText(ServerIP);
        jLabelServerIOIOPort.setText(ServerPort);
        jLabelClientIP.setText(ClientIP);
        jLabelClientIOIOPort.setText(ClientPort);
    }
    
    public void setSensorPort(String portServer, String clientServer){
        jLabelServerSensorPort.setText(portServer);
        jLabelClientSensorPort.setText(clientServer);
    }
    
    public void setCameraPort(String portServer, String portClient){
        jLabelServerCameraPort.setText(portServer);
        jLabelClientCameraPort.setText(portClient);
    }
    public void addLogMessage(String msg) {
        jTextAreaLog.setText(msg + "\n" + jTextAreaLog.getText());
    }
        
    public void set_sensors_values(float x_O2, float y_O2, float z_O2, float x_A2, float y_A2, float z_A2) {
	x_O = x_O2;
	y_O = y_O2;
	z_O = z_O2;
	jLabelBrujulaX.setText(x_O+"");
        jLabelBrujulaY.setText(y_O+"");
        jLabelBrujulaZ.setText(z_O+"");
        x_A = x_A2;
	y_A = y_A2;
	z_A = z_A2;
        jLabelOrientacionX.setText(x_A+"");
        jLabelOrientacionY.setText(y_A+"");
        jLabelOrientacionZ.setText(z_A+"");
        
    }
        
    public void update(int input) {	
	synchronized(this) {
            RIGHT = LEFT = UP = DOWN = false;			
            UPLEFT=UPRIGHT=DOWNLEFT=DOWNRIGHT=false;
                    
            switch(input) {
                case 73: // Diagonal arriba-izquierda
                    UPLEFT = true;
                    break;
                case 80: // Diagonal arriba-derecha
                    UPRIGHT = true;
                    break;
                case 44: // Diagonal abajo-izquierda
                    DOWNLEFT = true;
                    break;
                case 45: // Diagonal abajo-derecha
                    DOWNRIGHT = true;
                    break;
                case 75: // Izquierda
                    LEFT = true;
                    break;
                case 79: // Arriba
                    UP = true;
                    break;
                case 0: // Derecha
                    RIGHT = true;
                    break;
                case 46: // Abajo
                    DOWN = true;                            
            }
        }                
    }

	
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelCamara = new javax.swing.JPanel();
        jLabelFrameCamera = new javax.swing.JLabel();
        jPanelBotones = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxSizeCamera = new javax.swing.JComboBox();
        jSlider1 = new javax.swing.JSlider();
        jTextFieldPortCamera = new javax.swing.JTextField();
        jToggleButtonCamera = new javax.swing.JToggleButton();
        jPanelSensores = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jToggleButtonSensoresOn = new javax.swing.JToggleButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabelBrujulaX = new javax.swing.JLabel();
        jLabelBrujulaY = new javax.swing.JLabel();
        jLabelBrujulaZ = new javax.swing.JLabel();
        jLabelOrientacionX = new javax.swing.JLabel();
        jLabelOrientacionY = new javax.swing.JLabel();
        jLabelOrientacionZ = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabelSensoresPort = new javax.swing.JLabel();
        jPanelControles = new javax.swing.JPanel();
        jButtonControlesLeft = new javax.swing.JButton();
        jButtonControlesUp = new javax.swing.JButton();
        jButtonControlesRight = new javax.swing.JButton();
        jButtonControlesDown = new javax.swing.JButton();
        jButtonControlesLeft1 = new javax.swing.JButton();
        jButtonControlesLeft2 = new javax.swing.JButton();
        jButtonControlesLeft3 = new javax.swing.JButton();
        jButtonControlesLeft4 = new javax.swing.JButton();
        jPanelOperaciones = new javax.swing.JPanel();
        jToggleButtonLuz = new javax.swing.JToggleButton();
        jToggleButtonStopIOIOProcess = new javax.swing.JToggleButton();
        jButtonBocina = new javax.swing.JButton();
        jPanelLog = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaLog = new javax.swing.JTextArea();
        jPanelIPPort = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabelServerIP = new javax.swing.JLabel();
        jLabelClientIP = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabelServerIOIOPort = new javax.swing.JLabel();
        jLabelServerCameraPort = new javax.swing.JLabel();
        jLabelServerSensorPort = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabelClientIOIOPort = new javax.swing.JLabel();
        jLabelClientCameraPort = new javax.swing.JLabel();
        jLabelClientSensorPort = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cliente Android Car");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanelCamara.setBorder(javax.swing.BorderFactory.createTitledBorder("Camera"));

        jLabelFrameCamera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelFrameCamera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/camera.png"))); // NOI18N
        jLabelFrameCamera.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        java.awt.GridBagLayout jPanelBotonesLayout = new java.awt.GridBagLayout();
        jPanelBotonesLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanelBotonesLayout.rowHeights = new int[] {0, 5, 0};
        jPanelBotones.setLayout(jPanelBotonesLayout);

        jLabel4.setText("Tama√±o:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 4;
        jPanelBotones.add(jLabel4, gridBagConstraints);

        jLabel5.setText("Quality: 50");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        jPanelBotones.add(jLabel5, gridBagConstraints);

        jLabel3.setText("Puerto:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 4;
        jPanelBotones.add(jLabel3, gridBagConstraints);

        jComboBoxSizeCamera.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 5;
        jPanelBotones.add(jComboBoxSizeCamera, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        jPanelBotones.add(jSlider1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 73;
        gridBagConstraints.ipady = 3;
        jPanelBotones.add(jTextFieldPortCamera, gridBagConstraints);

        jToggleButtonCamera.setText("Off Camera");
        jToggleButtonCamera.setToolTipText("Activa/Desactiva recepci√≥n frames de c√°mara");
        jToggleButtonCamera.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleButtonCameraItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 14;
        jPanelBotones.add(jToggleButtonCamera, gridBagConstraints);

        javax.swing.GroupLayout jPanelCamaraLayout = new javax.swing.GroupLayout(jPanelCamara);
        jPanelCamara.setLayout(jPanelCamaraLayout);
        jPanelCamaraLayout.setHorizontalGroup(
            jPanelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCamaraLayout.createSequentialGroup()
                .addGroup(jPanelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabelFrameCamera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );
        jPanelCamaraLayout.setVerticalGroup(
            jPanelCamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCamaraLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelFrameCamera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanelCamara, gridBagConstraints);

        jPanelSensores.setBorder(javax.swing.BorderFactory.createTitledBorder("Sensores"));
        java.awt.GridBagLayout jPanel3Layout = new java.awt.GridBagLayout();
        jPanel3Layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0};
        jPanel3Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        jPanelSensores.setLayout(jPanel3Layout);

        jLabel6.setText("Puerto");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 5;
        jPanelSensores.add(jLabel6, gridBagConstraints);

        jToggleButtonSensoresOn.setText("Off Sensors");
        jToggleButtonSensoresOn.setToolTipText("Activa/Desactiva recepci√≥n datos de sensores");
        jToggleButtonSensoresOn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleButtonSensoresOnItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 5;
        jPanelSensores.add(jToggleButtonSensoresOn, gridBagConstraints);

        jLabel7.setText("Br√∫jula");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.weightx = 0.8;
        jPanelSensores.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Orientaci√≥n");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        jPanelSensores.add(jLabel8, gridBagConstraints);

        jLabel9.setText("X:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        jPanelSensores.add(jLabel9, gridBagConstraints);

        jLabel10.setText("Y:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        jPanelSensores.add(jLabel10, gridBagConstraints);

        jLabel11.setText("Z:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        jPanelSensores.add(jLabel11, gridBagConstraints);

        jLabelBrujulaX.setBackground(new java.awt.Color(255, 255, 255));
        jLabelBrujulaX.setForeground(new java.awt.Color(0, 0, 0));
        jLabelBrujulaX.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelBrujulaX.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 24;
        jPanelSensores.add(jLabelBrujulaX, gridBagConstraints);

        jLabelBrujulaY.setBackground(new java.awt.Color(255, 255, 255));
        jLabelBrujulaY.setForeground(new java.awt.Color(0, 0, 0));
        jLabelBrujulaY.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelBrujulaY.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 24;
        jPanelSensores.add(jLabelBrujulaY, gridBagConstraints);

        jLabelBrujulaZ.setBackground(new java.awt.Color(255, 255, 255));
        jLabelBrujulaZ.setForeground(new java.awt.Color(0, 0, 0));
        jLabelBrujulaZ.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelBrujulaZ.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 24;
        jPanelSensores.add(jLabelBrujulaZ, gridBagConstraints);

        jLabelOrientacionX.setBackground(new java.awt.Color(255, 255, 255));
        jLabelOrientacionX.setForeground(new java.awt.Color(0, 0, 0));
        jLabelOrientacionX.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelOrientacionX.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 24;
        jPanelSensores.add(jLabelOrientacionX, gridBagConstraints);

        jLabelOrientacionY.setBackground(new java.awt.Color(255, 255, 255));
        jLabelOrientacionY.setForeground(new java.awt.Color(0, 0, 0));
        jLabelOrientacionY.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelOrientacionY.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 24;
        jPanelSensores.add(jLabelOrientacionY, gridBagConstraints);

        jLabelOrientacionZ.setBackground(new java.awt.Color(255, 255, 255));
        jLabelOrientacionZ.setForeground(new java.awt.Color(0, 0, 0));
        jLabelOrientacionZ.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelOrientacionZ.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 19;
        jPanelSensores.add(jLabelOrientacionZ, gridBagConstraints);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("X:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        jPanelSensores.add(jLabel18, gridBagConstraints);

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Y:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        jPanelSensores.add(jLabel19, gridBagConstraints);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText("Z:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 10;
        jPanelSensores.add(jLabel20, gridBagConstraints);

        jLabelSensoresPort.setBackground(new java.awt.Color(255, 255, 255));
        jLabelSensoresPort.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelSensoresPort.setText("6789");
        jLabelSensoresPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelSensoresPort.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 12;
        jPanelSensores.add(jLabelSensoresPort, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanelSensores, gridBagConstraints);

        jPanelControles.setBorder(javax.swing.BorderFactory.createTitledBorder("Controles"));
        jPanelControles.setLayout(new java.awt.GridBagLayout());

        jButtonControlesLeft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/left_arrow.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 3;
        jPanelControles.add(jButtonControlesLeft, gridBagConstraints);

        jButtonControlesUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/up_arrow.png"))); // NOI18N
        jButtonControlesUp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonControlesUpKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonControlesUpKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 3;
        jPanelControles.add(jButtonControlesUp, gridBagConstraints);

        jButtonControlesRight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/right_arrow.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 3;
        jPanelControles.add(jButtonControlesRight, gridBagConstraints);

        jButtonControlesDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/down_arrow.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 3;
        jPanelControles.add(jButtonControlesDown, gridBagConstraints);

        jButtonControlesLeft1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/left_arrow.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 3;
        jPanelControles.add(jButtonControlesLeft1, gridBagConstraints);

        jButtonControlesLeft2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/left_arrow.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 3;
        jPanelControles.add(jButtonControlesLeft2, gridBagConstraints);

        jButtonControlesLeft3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/left_arrow.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 3;
        jPanelControles.add(jButtonControlesLeft3, gridBagConstraints);

        jButtonControlesLeft4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/eMagic/gfx/left_arrow.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 3;
        jPanelControles.add(jButtonControlesLeft4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanelControles, gridBagConstraints);

        jPanelOperaciones.setBorder(javax.swing.BorderFactory.createTitledBorder("Operaciones"));
        java.awt.GridBagLayout jPanelOperacionesLayout = new java.awt.GridBagLayout();
        jPanelOperacionesLayout.columnWidths = new int[] {0, 5, 0};
        jPanelOperacionesLayout.rowHeights = new int[] {0, 5, 0};
        jPanelOperaciones.setLayout(jPanelOperacionesLayout);

        jToggleButtonLuz.setText("Luz");
        jToggleButtonLuz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonLuzActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanelOperaciones.add(jToggleButtonLuz, gridBagConstraints);

        jToggleButtonStopIOIOProcess.setText("Stop IOIO Process");
        jToggleButtonStopIOIOProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonStopIOIOProcessActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelOperaciones.add(jToggleButtonStopIOIOProcess, gridBagConstraints);

        jButtonBocina.setText("Bocina");
        jButtonBocina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonBocinaMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButtonBocinaMouseReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 3;
        jPanelOperaciones.add(jButtonBocina, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanelOperaciones, gridBagConstraints);

        jPanelLog.setBorder(javax.swing.BorderFactory.createTitledBorder("Log"));

        jTextAreaLog.setColumns(20);
        jTextAreaLog.setRows(5);
        jScrollPane1.setViewportView(jTextAreaLog);

        javax.swing.GroupLayout jPanelLogLayout = new javax.swing.GroupLayout(jPanelLog);
        jPanelLog.setLayout(jPanelLogLayout);
        jPanelLogLayout.setHorizontalGroup(
            jPanelLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
        );
        jPanelLogLayout.setVerticalGroup(
            jPanelLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLogLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanelLog, gridBagConstraints);

        jPanelIPPort.setBorder(javax.swing.BorderFactory.createTitledBorder("Servidor Android "));
        jPanelIPPort.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Server IP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanelIPPort.add(jLabel2, gridBagConstraints);

        jLabel12.setText("IOIO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanelIPPort.add(jLabel12, gridBagConstraints);

        jLabel14.setText("Camera:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanelIPPort.add(jLabel14, gridBagConstraints);

        jLabel15.setText("Sensors:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanelIPPort.add(jLabel15, gridBagConstraints);

        jLabelServerIP.setBackground(new java.awt.Color(255, 255, 255));
        jLabelServerIP.setText("255.255.255.255");
        jLabelServerIP.setToolTipText("");
        jLabelServerIP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelServerIP.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanelIPPort.add(jLabelServerIP, gridBagConstraints);

        jLabelClientIP.setBackground(new java.awt.Color(255, 255, 255));
        jLabelClientIP.setText("255.255.255.255");
        jLabelClientIP.setToolTipText("");
        jLabelClientIP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelClientIP.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanelIPPort.add(jLabelClientIP, gridBagConstraints);

        jLabel24.setText("Client IP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanelIPPort.add(jLabel24, gridBagConstraints);

        jLabelServerIOIOPort.setBackground(new java.awt.Color(255, 255, 255));
        jLabelServerIOIOPort.setText("00000");
        jLabelServerIOIOPort.setToolTipText("");
        jLabelServerIOIOPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelServerIOIOPort.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanelIPPort.add(jLabelServerIOIOPort, gridBagConstraints);

        jLabelServerCameraPort.setBackground(new java.awt.Color(255, 255, 255));
        jLabelServerCameraPort.setText("00000");
        jLabelServerCameraPort.setToolTipText("");
        jLabelServerCameraPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelServerCameraPort.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanelIPPort.add(jLabelServerCameraPort, gridBagConstraints);

        jLabelServerSensorPort.setBackground(new java.awt.Color(255, 255, 255));
        jLabelServerSensorPort.setText("00000");
        jLabelServerSensorPort.setToolTipText("");
        jLabelServerSensorPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelServerSensorPort.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanelIPPort.add(jLabelServerSensorPort, gridBagConstraints);

        jLabel28.setText("IOIO:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        jPanelIPPort.add(jLabel28, gridBagConstraints);

        jLabel29.setText("Camera:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanelIPPort.add(jLabel29, gridBagConstraints);

        jLabel33.setText("Sensors:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanelIPPort.add(jLabel33, gridBagConstraints);

        jLabelClientIOIOPort.setBackground(new java.awt.Color(255, 255, 255));
        jLabelClientIOIOPort.setText("00000");
        jLabelClientIOIOPort.setToolTipText("");
        jLabelClientIOIOPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelClientIOIOPort.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        jPanelIPPort.add(jLabelClientIOIOPort, gridBagConstraints);

        jLabelClientCameraPort.setBackground(new java.awt.Color(255, 255, 255));
        jLabelClientCameraPort.setText("00000");
        jLabelClientCameraPort.setToolTipText("");
        jLabelClientCameraPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelClientCameraPort.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        jPanelIPPort.add(jLabelClientCameraPort, gridBagConstraints);

        jLabelClientSensorPort.setBackground(new java.awt.Color(255, 255, 255));
        jLabelClientSensorPort.setText("00000");
        jLabelClientSensorPort.setToolTipText("");
        jLabelClientSensorPort.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelClientSensorPort.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        jPanelIPPort.add(jLabelClientSensorPort, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanelIPPort, gridBagConstraints);

        setSize(new java.awt.Dimension(800, 700));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

   
    private void jButtonControlesUpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonControlesUpKeyPressed
        
           if (evt.getKeyCode() == 27)
               System.exit(0);
           else
               this.update(evt.getKeyCode());               
                       
    }//GEN-LAST:event_jButtonControlesUpKeyPressed

    private void jButtonControlesUpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonControlesUpKeyReleased
        RIGHT = LEFT = UP = DOWN = false;			
        UPLEFT=UPRIGHT=DOWNLEFT=DOWNRIGHT=false;
    }//GEN-LAST:event_jButtonControlesUpKeyReleased

    private void jToggleButtonSensoresOnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jToggleButtonSensoresOnItemStateChanged
        // TODO add your handling code here:
        if (jToggleButtonSensoresOn.isSelected()) {
            sensors_thread = new Sensors_Thread_UDP(this);
            jToggleButtonSensoresOn.setText("On Sensors");            
            addLogMessage("Proceso Sensor activado ...");
            
        } else {
            if (sensors_thread != null) {
                sensors_thread.stop();
                jToggleButtonSensoresOn.setText("Off Sensors");            
                addLogMessage("Proceso Sensor desactivado ...");
            }
                
        }
            
    }//GEN-LAST:event_jToggleButtonSensoresOnItemStateChanged

    private void jToggleButtonLuzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonLuzActionPerformed
        if (jToggleButtonLuz.isSelected())
            LUZ = true;
        else 
            LUZ = false;
    }//GEN-LAST:event_jToggleButtonLuzActionPerformed

    private void jToggleButtonCameraItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jToggleButtonCameraItemStateChanged
        // TODO add your handling code here:
         if (jToggleButtonCamera.isSelected()) {           
            cam_thread = new Cam_Thread_UDP(this);                      
            jToggleButtonCamera.setText("On Camera");             
            jLabelClientCameraPort.setText(">1024");
            addLogMessage("Proceso Camara activado ...");
        } else {
            if (cam_thread != null) {
                cam_thread.stop();
                jToggleButtonCamera.setText("Off Camera");            
                addLogMessage("Proceso Camara desactivado ...");
                jLabelServerCameraPort.setText("0000");
                jLabelClientCameraPort.setText("0000");
            }
                
        }
    }//GEN-LAST:event_jToggleButtonCameraItemStateChanged

    private void jToggleButtonStopIOIOProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonStopIOIOProcessActionPerformed
        // TODO add your handling code here:
        if (jToggleButtonStopIOIOProcess.isSelected()){
            SEGUIR_BUCLE = false;
        }
    }//GEN-LAST:event_jToggleButtonStopIOIOProcessActionPerformed

    private void jButtonBocinaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBocinaMousePressed
        BOCINA = true;        
    }//GEN-LAST:event_jButtonBocinaMousePressed

    private void jButtonBocinaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBocinaMouseReleased
        BOCINA = false;
    }//GEN-LAST:event_jButtonBocinaMouseReleased

    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBocina;
    private javax.swing.JButton jButtonControlesDown;
    private javax.swing.JButton jButtonControlesLeft;
    private javax.swing.JButton jButtonControlesLeft1;
    private javax.swing.JButton jButtonControlesLeft2;
    private javax.swing.JButton jButtonControlesLeft3;
    private javax.swing.JButton jButtonControlesLeft4;
    private javax.swing.JButton jButtonControlesRight;
    private javax.swing.JButton jButtonControlesUp;
    private javax.swing.JComboBox jComboBoxSizeCamera;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBrujulaX;
    private javax.swing.JLabel jLabelBrujulaY;
    private javax.swing.JLabel jLabelBrujulaZ;
    private javax.swing.JLabel jLabelClientCameraPort;
    private javax.swing.JLabel jLabelClientIOIOPort;
    private javax.swing.JLabel jLabelClientIP;
    private javax.swing.JLabel jLabelClientSensorPort;
    private javax.swing.JLabel jLabelFrameCamera;
    private javax.swing.JLabel jLabelOrientacionX;
    private javax.swing.JLabel jLabelOrientacionY;
    private javax.swing.JLabel jLabelOrientacionZ;
    private javax.swing.JLabel jLabelSensoresPort;
    private javax.swing.JLabel jLabelServerCameraPort;
    private javax.swing.JLabel jLabelServerIOIOPort;
    private javax.swing.JLabel jLabelServerIP;
    private javax.swing.JLabel jLabelServerSensorPort;
    private javax.swing.JPanel jPanelBotones;
    private javax.swing.JPanel jPanelCamara;
    private javax.swing.JPanel jPanelControles;
    private javax.swing.JPanel jPanelIPPort;
    private javax.swing.JPanel jPanelLog;
    private javax.swing.JPanel jPanelOperaciones;
    private javax.swing.JPanel jPanelSensores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextAreaLog;
    private javax.swing.JTextField jTextFieldPortCamera;
    private javax.swing.JToggleButton jToggleButtonCamera;
    private javax.swing.JToggleButton jToggleButtonLuz;
    private javax.swing.JToggleButton jToggleButtonSensoresOn;
    private javax.swing.JToggleButton jToggleButtonStopIOIOProcess;
    // End of variables declaration//GEN-END:variables

   
}
